{"ast":null,"code":"var _jsxFileName = \"/home/skylar/Documentos/learnin Play/Frontend/front/src/pages/form-creator/question-drawer.js\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nexport function drawOpenQuestion(question, index) {\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, index + 1 + \".- \" + question.title), /*#__PURE__*/React.createElement(Form.Control, {\n    style: {\n      background: \"var(--light)\",\n      color: \"var(--dark)\",\n      borderRadius: \"1rem\"\n    },\n    type: \"text\",\n    disabled: true,\n    placeholder: \"Respuesta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }));\n}\nexport function drawOpenQuestionEditable(index, question, setter) {\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, index + 1 + \".- \" + question.title), /*#__PURE__*/React.createElement(Form.Control, {\n    style: {\n      background: \"var(--light)\",\n      color: \"var(--dark)\",\n      borderRadius: \"1rem\"\n    },\n    type: \"text\",\n    placeholder: \"Respuesta\",\n    onChange: ({\n      target\n    }) => setter(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }));\n}\nexport function drawOpenQuestionGradable(index, question) {\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, index + 1 + \".- \" + question.title), /*#__PURE__*/React.createElement(Form.Control, {\n    style: {\n      background: \"var(--light-gray)\",\n      color: \"var(--dark)\",\n      borderRadius: \"1rem\"\n    },\n    type: \"text\",\n    value: question.answer,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n}\nexport function drawOptionsQuestion(question, index) {\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, index + 1 + \".- \" + question.title), /*#__PURE__*/React.createElement(Col, {\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, question.options.map((option, index) => {\n    return /*#__PURE__*/React.createElement(Form.Check, {\n      key: index,\n      type: \"radio\",\n      name: question.title + \"_radios\",\n      label: option.title,\n      checked: option.correct,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    });\n  })));\n}\nexport function drawOptionsQuestionEditable(index, question) {\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, index + 1 + \".- \" + question.title), /*#__PURE__*/React.createElement(Col, {\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, question.options.map((option, index) => {\n    return /*#__PURE__*/React.createElement(Form.Check, {\n      key: index,\n      type: \"radio\",\n      name: question.title + \"_radios\",\n      label: option.title,\n      onChange: ({\n        target\n      }) => {\n        question.options.forEach(op => op.correct = !target);\n        option.correct = target.checked;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    });\n  })));\n}\nexport function drawOptionsQuestionGradable(index, question) {\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, index + 1 + \".- \" + question.title), /*#__PURE__*/React.createElement(Col, {\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, question.options.map((option, index) => {\n    return /*#__PURE__*/React.createElement(Form.Check, {\n      key: index,\n      type: \"radio\",\n      name: question.title + \"_radios\",\n      label: option.title,\n      defaultChecked: option.correct,\n      disabled: !option.correct,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/home/skylar/Documentos/learnin Play/Frontend/front/src/pages/form-creator/question-drawer.js"],"names":["React","Form","Col","drawOpenQuestion","question","index","title","background","color","borderRadius","drawOpenQuestionEditable","setter","target","value","drawOpenQuestionGradable","answer","drawOptionsQuestion","options","map","option","correct","drawOptionsQuestionEditable","forEach","op","checked","drawOptionsQuestionGradable"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport function drawOpenQuestion(question, index) {\r\n    return (\r\n        <Form.Group key={index}>\r\n            <Form.Label>{(index + 1) + \".- \" + question.title}</Form.Label>\r\n            <Form.Control style={{background: \"var(--light)\", color: \"var(--dark)\", borderRadius: \"1rem\"}} type=\"text\"\r\n                          disabled placeholder={\"Respuesta\"}/>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport function drawOpenQuestionEditable(index, question, setter) {\r\n    return (\r\n        <Form.Group key={index}>\r\n            <Form.Label>{(index + 1) + \".- \" + question.title}</Form.Label>\r\n            <Form.Control style={{background: \"var(--light)\", color: \"var(--dark)\", borderRadius: \"1rem\"}} type=\"text\"\r\n                          placeholder={\"Respuesta\"} onChange={({target}) => setter(target.value)}/>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport function drawOpenQuestionGradable(index, question) {\r\n    return (\r\n        <Form.Group key={index}>\r\n            <Form.Label>{(index + 1) + \".- \" + question.title}</Form.Label>\r\n            <Form.Control style={{background: \"var(--light-gray)\", color: \"var(--dark)\", borderRadius: \"1rem\"}} type=\"text\"\r\n                          value={question.answer} disabled/>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport function drawOptionsQuestion(question, index) {\r\n    return (\r\n        <Form.Group key={index}>\r\n            <Form.Label>{(index + 1) + \".- \" + question.title}</Form.Label>\r\n            <Col sm>\r\n                {\r\n                    question.options.map((option, index) => {\r\n                        return (\r\n                            <Form.Check\r\n                                key={index}\r\n                                type={\"radio\"}\r\n                                name={question.title + \"_radios\"}\r\n                                label={option.title}\r\n                                checked={option.correct}\r\n                                disabled\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </Col>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport function drawOptionsQuestionEditable(index, question) {\r\n    return (\r\n        <Form.Group key={index}>\r\n            <Form.Label>{(index + 1) + \".- \" + question.title}</Form.Label>\r\n            <Col sm>\r\n                {\r\n                    question.options.map((option, index) => {\r\n                        return (\r\n                            <Form.Check\r\n                                key={index}\r\n                                type={\"radio\"}\r\n                                name={question.title + \"_radios\"}\r\n                                label={option.title}\r\n                                onChange={({target}) => {\r\n                                    question.options.forEach(op => op.correct = !target);\r\n                                    option.correct = target.checked;\r\n                                }}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </Col>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport function drawOptionsQuestionGradable(index, question) {\r\n    return (\r\n        <Form.Group key={index}>\r\n            <Form.Label>{(index + 1) + \".- \" + question.title}</Form.Label>\r\n            <Col sm>\r\n                {\r\n                    question.options.map((option, index) => {\r\n                        return (\r\n                            <Form.Check\r\n                                key={index}\r\n                                type={\"radio\"}\r\n                                name={question.title + \"_radios\"}\r\n                                label={option.title}\r\n                                defaultChecked={option.correct}\r\n                                disabled={!option.correct}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </Col>\r\n        </Form.Group>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}