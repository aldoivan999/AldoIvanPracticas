{"ast":null,"code":"var _jsxFileName = \"/home/skylar/Documentos/learnin Play/Frontend/front/src/pages/test-view/test-view.js\";\nimport \"./test-view.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useLocation } from 'react-router-dom';\nimport { getFormById } from \"../../services/FromsTeacherDataService\";\nimport { drawOpenQuestion, drawOptionsQuestion } from \"../form-creator/question-drawer\";\nexport const TestView = () => {\n  const location = useLocation();\n  const path = location.pathname.split(\"/\");\n  const [form, setForm] = useState({\n    teacher: {},\n    questions: []\n  });\n  useEffect(() => {\n    getFormById(path[path.length - 1]).then(response => {\n      let f = response.data;\n      f.questions = JSON.parse(f.questions);\n      setForm(f);\n    });\n  }, [form.id]);\n\n  function setTitle(title) {\n    form.title = title;\n  }\n\n  function setLesson(lesson) {\n    form.lesson = lesson;\n  }\n\n  function updateForm() {\n    console.log(form);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test-container p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-title text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, form.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-subtitle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, form.lesson)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, form.questions.map((question, index) => {\n    switch (question.type) {\n      case \"OPEN\":\n        return drawOpenQuestion(question, index);\n\n      case \"OPTIONS\":\n        return drawOptionsQuestion(question, index);\n\n      default:\n        throw new Error(\"No suitable method found\");\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/skylar/Documentos/learnin Play/Frontend/front/src/pages/test-view/test-view.js"],"names":["React","useEffect","useState","Form","Row","Col","useLocation","getFormById","drawOpenQuestion","drawOptionsQuestion","TestView","location","path","pathname","split","form","setForm","teacher","questions","length","then","response","f","data","JSON","parse","id","setTitle","title","setLesson","lesson","updateForm","console","log","map","question","index","type","Error"],"mappings":";AAAA,OAAO,iBAAP;AAEA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,WAAR,QAA0B,wCAA1B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,QAAoD,iCAApD;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAb;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC;AAACe,IAAAA,OAAO,EAAE,EAAV;AAAcC,IAAAA,SAAS,EAAE;AAAzB,GAAD,CAAhC;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,WAAW,CAACK,IAAI,CAACA,IAAI,CAACO,MAAL,GAAc,CAAf,CAAL,CAAX,CAAmCC,IAAnC,CAAwCC,QAAQ,IAAI;AAChD,UAAIC,CAAC,GAAGD,QAAQ,CAACE,IAAjB;AAEAD,MAAAA,CAAC,CAACJ,SAAF,GAAcM,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACJ,SAAb,CAAd;AAEAF,MAAAA,OAAO,CAACM,CAAD,CAAP;AACH,KAND;AAOH,GARQ,EAQN,CAACP,IAAI,CAACW,EAAN,CARM,CAAT;;AAUA,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrBb,IAAAA,IAAI,CAACa,KAAL,GAAaA,KAAb;AACH;;AAED,WAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACvBf,IAAAA,IAAI,CAACe,MAAL,GAAcA,MAAd;AACH;;AAED,WAASC,UAAT,GAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,IAAI,CAACa,KAA5C,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Cb,IAAI,CAACe,MAA/C,CAFJ,CADJ,CADJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQf,IAAI,CAACG,SAAL,CAAegB,GAAf,CAAmB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACpC,YAAQD,QAAQ,CAACE,IAAjB;AACI,WAAK,MAAL;AACI,eAAO7B,gBAAgB,CAAC2B,QAAD,EAAWC,KAAX,CAAvB;;AACJ,WAAK,SAAL;AACI,eAAO3B,mBAAmB,CAAC0B,QAAD,EAAWC,KAAX,CAA1B;;AACJ;AACI,cAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AANR;AAQH,GATD,CAFR,CATJ,CADJ,CADJ;AA4BH,CAxDM","sourcesContent":["import \"./test-view.css\";\r\n\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {useLocation} from 'react-router-dom'\r\nimport {getFormById} from \"../../services/FromsTeacherDataService\";\r\nimport {drawOpenQuestion, drawOptionsQuestion} from \"../form-creator/question-drawer\";\r\n\r\nexport const TestView = () => {\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\");\r\n\r\n    const [form, setForm] = useState({teacher: {}, questions: []});\r\n\r\n    useEffect(() => {\r\n        getFormById(path[path.length - 1]).then(response => {\r\n            let f = response.data;\r\n\r\n            f.questions = JSON.parse(f.questions);\r\n\r\n            setForm(f);\r\n        });\r\n    }, [form.id]);\r\n\r\n    function setTitle(title) {\r\n        form.title = title;\r\n    }\r\n\r\n    function setLesson(lesson) {\r\n        form.lesson = lesson;\r\n    }\r\n\r\n    function updateForm() {\r\n        console.log(form);\r\n    }\r\n\r\n    return (\r\n        <div className={\"test-container p-4\"}>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Row>\r\n                        <Col>\r\n                            <p className=\"form-title text-center\">{form.title}</p>\r\n                            <p className=\"form-subtitle text-center\">{form.lesson}</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Form.Group>\r\n                <div className={\"text-left\"}>\r\n                    {\r\n                        form.questions.map((question, index) => {\r\n                            switch (question.type) {\r\n                                case \"OPEN\":\r\n                                    return drawOpenQuestion(question, index);\r\n                                case \"OPTIONS\":\r\n                                    return drawOptionsQuestion(question, index);\r\n                                default:\r\n                                    throw new Error(\"No suitable method found\");\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}